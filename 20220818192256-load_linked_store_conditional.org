:PROPERTIES:
:ID:       df98e314-6ba8-46dd-9bdc-c3893d1c1353
:END:
#+title: Load Linked/Store Conditional
#+filetags: :computer-science:concurrency:

Load linked and store conditional is a pair of instructions work
together as a single [[id:a36d93f8-6e97-45a7-950a-6ec170d558d7][Atomic Read-Modify-Write]] instruction.

Load linked reads a value from a memory location while writing the
address of the memory location to a special register known as the
/link register/.

Store conditional writes a value to an address /if and only if/ the
address is the same as the content of the link register.

Any write operation will clear the link register, so store conditional
insturction would fail whenever there is any other write operation
performed between itself and the load linked opearation.

LL/SC has the advantage over [[id:d4bd1682-59c2-4513-945f-fd18e47e93cd][Compare and Swap]] that it is not
vulnerable to [[id:562e111b-3e0b-4106-bef2-725d7cc83def][ABA Problem]], though it might fail spuriously. LL/SC is
also more pipeline-friendly than compare-and-swap since
compare-and-swap is a single instruction with two memory access stage,
while LL/SC is composed of two instructions each with one memory
access stage. This is similar to most other instructions so it is
easier to fit LL/SC into an existing instruction pipeline.
